#cloud-config

coreos:
  etcd2:
    proxy: on
    listen-client-urls: http://localhost:2379
    initial-cluster: etcdserver=http://%(server_ip)s:2380

  fleet:
    metadata: "role=worker"
    etcd_servers: "http://localhost:2379"
  
  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start

users:
  - name: "root"
    ssh-authorized-keys:
       - %(rsa_public_key)s
       - %(int_rsa_public_key)s

ssh_authorized_keys:
  - %(rsa_public_key)s
  - %(int_rsa_public_key)s

write_files:
  - path: "/root/.ssh/id_rsa"
    owner: "root"
    permissions: "0600"
    encoding: "base64"
    content: %(int_rsa_private_key)s

write_files:
  - path: "/home/core/.ssh/id_rsa"
    owner: "core"
    permissions: "0600"
    encoding: "base64"
    content: %(int_rsa_private_key)s

write_files:
  - path: "/root/.ssh/id_rsa.pub"
    owner: "root"
    permissions: "00644"
    content: %(int_rsa_public_key)s

write_files:
  - path: "/bootpxe/etcd_discovery_token"
    content: %(etcd_discovery_token)s
write_files:
  - path: "/bootpxe/rsa_public_key"
    content: %(rsa_public_key)s
write_files:
  - path: "/bootpxe/coreos-pxe.service"
    content: |
      [Unit]
      Description=CoreOSPxeAnnouncing
      After=docker.service
      Requires=docker.service

      [Service]
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker kill coreos-pxe
      ExecStartPre=-/usr/bin/docker rm coreos-pxe
      ExecStartPre=/usr/bin/docker pull dermatthes/coreos-pxe
      ExecStart=/usr/bin/docker run --net=host -e MODE=JOIN -e INTERFACE=enp8s0 -v /bootpxe/rsa_public_key:/app/rsa_public_key -v /root/.ssh/id_rsa:/root/.ssh/id_rsa -v /root/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub --name coreos-pxe dermatthes/coreos-pxe
      ExecStop=/usr/bin/docker stop coreos-pxe


hostname: coreos-%(client_ip_dash)s
