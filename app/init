#!/bin/sh

set -e

pxe_server_ip=$(ifconfig $INTERFACE | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}')

rsa_public_key=$(cat /app/rsa_public_key)

echo Server IP: $pxe_server_ip

# Update discovery token, bootstrap with 3 nodes
# sed -i -e s,DISCOVERY_TOKEN,$(wget -qO- https://discovery.etcd.io/new?size=3),g /pxe/cloud-config.yml

# Fallback to default config if user dose not provide
[ ! -d /config/pxelinux.cfg ] && \
    echo "Use default configs" && cp -a /app/config/. /config

# Copy to tftp root
cp -R /config/pxelinux.cfg /app/tftp
chmod a+r /app/tftp/pxelinux.cfg/*

# Update pxelinux config to point real server ip
sed -i -e s/%\(server_ip\)s/$pxe_server_ip/ /app/tftp/pxelinux.cfg/*

echo "Starting python cloudconfig webserver (make sure to block outside requests to port 888)"
# Start http server to host cloud.config
python3 -u /app/httpd.py /app/config $pxe_server_ip 888 "$rsa_public_key" &

# Download image
if [ ! -d /config/images ];then
    echo "Downloading CoreOS images"
    mkdir -p /config/images/current
    wget -nv http://stable.release.core-os.net/amd64-usr/current/coreos_production_image.bin.bz2
    wget -nv http://stable.release.core-os.net/amd64-usr/current/coreos_production_image.bin.bz2.sig
    echo "Downloading images finished."
fi

# Host images
cd /config/images
python3 -u -m http.server 3000 &

# Start dnsmasq as dhcp proxy to $pxe_server_ip

if [ $MODE = 'JOIN' ]
then
    ln -s /app/tftp/pxelinux.cfg/bootstrap /app/tftp/pxelinux.cfg/default
    echo "MODE SELECT: JOIN MODE!"
    dnsmasq \
        --dhcp-range=$pxe_server_ip,proxy \
        --dhcp-no-overrid \
        --dhcp-boot=pxelinux.0,pxeserver,$pxe_server_ip \
        --pxe-service=x86PC,"Join existing CoreOS Cluster",pxelinux \
        --enable-tftp \
        --tftp-root=/app/tftp \
        --user=root \
        --no-daemon
fi

if [ $MODE = 'BOOTSTRAP' ]
then
    ln -s /app/tftp/pxelinux.cfg/join /app/tftp/pxelinux.cfg/default
    echo "MODE SELECT: BOOTSTRAP MODE! (new cluster only!)"
    dnsmasq \
        --dhcp-range=$pxe_server_ip,proxy \
        --dhcp-no-overrid \
        --dhcp-boot=pxelinux.0,pxeserver,$pxe_server_ip \
        --pxe-service=x86PC,"Bootstrap CoreOS Cluster",pxelinux \
        --enable-tftp \
        --tftp-root=/app/tftp \
        --user=root \
        --no-daemon
fi

